/**
 * Les Ourses à plumes
 * Javascript Loader
 * No dependency
 * ver. 0.0.7
 */

/* ------------------------------------------------------------------ */
/* # Public Variables */
/* ------------------------------------------------------------------ */

/* Whois */
$org_url                = "http://www.ourses-plumes.org/";      // String   Set organization URL.
$org_name               = "Les Ourses &agrave; plumes";         // String   Set organization name.
$app_name               = "Webzine f&eacute;ministe";           // String   Set application name.
$app_ver                = "0.0.7";                              // String   Set application version.
$app_kwd                = ["Webzine", "F&eacute;minisme"];      // Array    Set application keywords.
$app_desc               = "Un webzine f&eacute;ministe.";       // String   Set application keywords.
$app_genr               = null;                                 // String   Set application generator (i.e. the software used for dev).

/* Security */
$oursesAuthcToken       = "oursesAuthcToken";                   // String   Key of the authentication token. Default = "oursesAuthcToken"
$oursesUserPseudo       = "oursesUserPseudo";                   // String   Key of the User pseudo. Default = "oursesUserPseudo"
$oursesUserRole         = "oursesUserRole";                     // String   Key of the User role. Default = "oursesUserRole"
$oursesAccountId        = "oursesAccountId";                    // String   Key of the User account id. Default = "oursesAccountId"
$oursesProfileId        = "oursesProfileId";                    // String   Key of the User account id. Default = "oursesProfileId"
$oursesAvatarPath       = "oursesAvatarPath";                   // String   Key of the Avatar path. Default = "oursesAvatarPath"
$redir_param            = "?redirection=";                      // String   URL param in the login page. Use for the redirection. Default = "?redirection="
$role_admin             = "Administratrice"                     // String   Admin role. Default = "Administratrice"
$role_redac             = "Rédactrice"                          // String   Redacter role. Default = "Rédactrice"

/* Utility */
$build_compress         = false;                                // Boolean  Compress generated content (i.e. remove tabs and line ends). Default = false
$build_container        = true;                                 // Boolean  Generate container elements (i.e. sidebar, header, footer). Default = true
$build_icons            = true;                                 // Boolean  Generate inline SVG icons into the document. Default = true
$dev_toolbar            = true;                                 // Boolean  Create dev toolbar. Default = false
$free_log               = true;                                 // Boolean  Disable abide validation for logger. Default = "false"
$css_fx                 = true;                                 // Boolean  Enable CSS effects. Default = true
$lib_ext                = "";                                   // String   JS libraries additional extension. Default = ".min"
$null_link              = "javascript:void(0)";                 // String   Set null link value. Default = "javascript:void(0)"
$page_title             = null;                                 // String   Register page title. Default = null

/* Navigation */
$login_page             = "/connexion";                         // String   URL of the login page. Default = "/connexion"
$accounts_page          = "/comptes";                           // String   URL of the accounts page Default = "/comptes"
$bug_tracker_page       = "/bug-tracker";                       // String   URL of the bug tracker page Default = "/bug-tracker"
$home_page              = "/";                                  // String   URL of the home page Default = "/"
$my_account_page        = "/parametres/compte";                 // String   URL of my account page Default = "/parametres/compte"
$my_profile_page        = "/parametres/profil";                 // String   URL of my profile page Default = "/parametres/profil"
$articles               = "/articles";                          // String   URL of list of articles page Default = "/articles"
$new_article            = "/articles/nouveau";                  // String   URL of a new article Default = "/articles/nouveau"

$app_root               = "/";                                  // String   Set application base URL. Default = "/"
$js_root                = $app_root + "js/";                    // String   Set js root. Default = "js/"
$css_root               = $app_root + "css/";                   // String   Set js root. Default = "css/"
$img_root               = $app_root + "img/";                   // String   Set js root. Default = "img/"

$app_path               = {                                     // Object   Set application path to files.
	js: $app_root + "js/",                                        // String   Path to scripts. Default = "js/"
	css: $app_root + "css/",                                      // String   Path to style sheets. Default = "css/"
	img: $app_root + "img/",                                      // String   Path to images. Default = "img/"
	fnt: $app_root + "fnt/",                                      // String   Path to fonts. Default = "fnt/"
	tmpl: $app_root + "tmpl/"                                     // String   Path to templates. Default = "tmpl/"
};

$svg_icons_file         = $app_path.img + "ui/ui-iconset.svg";  // String   Store URL of SVG icons file. Default = "img/ui/ui-iconset.svg"
$svg_icons_fx_file      = $app_path.css + "loap-icons-fx.css";  // String   Store URL of SVG icons effects file. Default = "css/loap-icons-fx.css"

/* Messages */
$app_msg                = {                                     // Object   Define generic application messages.
	"error" : "Une erreur technique s&rsquo;est produite. Veuillez pr&eacute;venir l&rsquo;administateur du site.",
	"form_invalid" : "Le formulaire que vous avez soumis est invalide et n&rsquo;a pas pu &ecirc;tre envoy&eacute;.",
	"form_incomplete" : "Le formulaire que vous avez soumis est incomplet et n&rsquo;a pas &eacute;t&eacute; envoy&eacute;.",
	"article_deleted" : "Cet article n&rsquo;existe plus, il a &eacute;t&eacute; supprim&eacute;.",
	"article_offcheck" : "Cet article n&rsquo;est plus &agrave; v&eacute;rifier, vous pouvez raffra&icirc;chir la page pour voir les derniers changements.",
	"article_offline" : "Cet article n&rsquo;est plus en ligne, vous pouvez raffra&icirc;chir la page pour voir les derniers changements.",
	"account_updated" : "Compte mis &agrave; jour avec succ&egrave;s",
	"something_weird_happened" : "Un truc vraiment chelou s&rsquo;est produit. Veuillez &eacute;teindre votre ordinateur et faire le poirier en attendant les secours."
}

/* Timing */
var $months = [                                                 // Array    Define literals for months.
	"janvier",
	"février",
	"mars",
	"avril",
	"mai",
	"juin",
	"juillet",
	"août",
	"septembre",
	"octobre",
	"novembre",
	"décembre"
];

/* ------------------------------------------------------------------ */
/* # Navigation map relocation */
/* ------------------------------------------------------------------ */

/* Methods */
function isFileProtocol() {
	if (window.location.href.split("/")[0].slice(0,4) === "file") {
		return true;
	}
}

function isLocalHost() {
	if (window.location.hostname === "localhost") {
		return true;
	}
}

/* Processing */
if (isFileProtocol()) {
	$app_root = ""; // Set relative base URL while serverless
	$js_root = "js/";
	$css_root = "css/";
	$img_root = "img/";
	$svg_icons_file = "img/ui/ui-iconset.svg";
	$svg_icons_fx_file = "css/loap-icons-fx.css";
}

/* ------------------------------------------------------------------ */
/* # Prebuild processing */
/* ------------------------------------------------------------------ */

/* Private Variables */
var IE_conditional_comments = [
	lb() + tb(3) + "<style type='text/css'>.gradient{filter:none;}</style>",
	lb() + tb(3) + "<style type='text/css'>.gradient{filter:none;}</style>"
];
var head_tags = [
	{elem: "meta", attr: {name: "viewport", content: "width=device-width, initial-scale=1.0"}},
	{elem: "meta", attr: {name: "author", content: $org_name}},
	{elem: "meta", attr: {name: "application-name", content: $app_name}},
	{elem: "meta", attr: {name: "keywords", content: $app_kwd.toString()}},
	{elem: "meta", attr: {name: "description", content: $app_desc}},
	{elem: "meta", attr: {name: "generator", content: $app_genr}},
	{elem: "link", attr: {href: $app_root + "img/ico/loap-icon-64x64.png", rel: "icon", type: "image/x-icon"}},
	//{elem: "link", attr: {href: $app_root + "css/normalize.css", rel: "stylesheet"}}, // UNUSED
	{elem: "link", attr: {href: $app_root + "css/foundation.css", rel: "stylesheet"}},
	{elem: "link", attr: {href: $app_root + "css/loap-main.css", rel: "stylesheet"}},
	{elem: "link", attr: {href: $app_root + "css/loap-icons.css", rel: "stylesheet"}},
	{elem: "link", attr: {href: $app_root + "css/loap-fx.css", rel: "stylesheet"}},
	{elem: "script", attr: {src: $app_root + "js/modernizr/modernizr" + $lib_ext +".js"}},
	{elem: "script", attr: {src: $app_root + "js/jquery/jquery-2.x" + $lib_ext + ".js"}},
	{elem: "script", attr: {src: $app_root + "js/jquery/jquery.autosize" + $lib_ext + ".js"}},
	{elem: "script", attr: {src: $app_root + "js/dot/dot" + $lib_ext + ".js"}},
	{elem: "script", attr: {src: $app_root + "js/dot/dot.settings.js"}},
	{elem: "!--[lt IE 9]", text: IE_conditional_comments[1] + lb() + tb(2) + "<![endif]-->"},
	{elem: "!--[gt IE 9]", text: IE_conditional_comments[2] + lb() + tb(2) + "<![endif]-->"}
];
var body_tags = [
	{elem: "script", attr: {src: $app_root + "js/loap.js"}},
	{elem: "script", attr: {src: $app_root + "js/foundation/foundation.lib.js"}}
];

/* Methods Declaration */
function p_char(n, c) { // Print Character (n.b. for local use only)
	var s = "";
	if ($build_compress == false) {
		for (var i = 0; i < n; i++) {
			s += c;
		}
	}
	return s;
}

function tb(n, c) { // Tabulation (alias)
	var n = n || 1, c = c || "\t"; // default params
	return p_char(n, c);
}

function lb(n, c) { // Line Break (alias)
	var n = n || 1, c = c || "\n"; // default params
	return p_char(n, c);
}

function b_html(array) { // Build HTML Elements
	var str = "";
	for (index in array) {
		str += lb() + tb(2) + "<" + array[index].elem;
		for (param in array[index].attr) {
			if (array[index].attr[param] != null) {
				str += " " + param + "='" + array[index].attr[param] + "'";
			}
		}
		str += ">";
		if (typeof array[index].text !== "undefined") {
			str += array[index].text;
		}
		if (array[index].elem == "script") {
			str += "</script>";
		}
	}
	return str;
}

function load(script) { // Define Postbuild Processing
	if (typeof script !== "undefined") {
		body_tags.splice(-1, 0, {elem: "script", attr: {src: $js_root + script}});
	}
	document.write(b_html(body_tags));
}

/* Process Prebuild */
document.write(b_html(head_tags));


/* ------------------------------------------------------------------ */
/* # XMLHttpRequest */
/* ------------------------------------------------------------------ */
/*
 * NOTE
 * Below is a simple HTTP file request object.
 */

var xhr = (function() {
	if (typeof XMLHttpRequest !== "undefined") {
		if (isFileProtocol() && navigator.appName == "Microsoft Internet Explorer") {
			return new ActiveXObject("Microsoft.XMLHTTP") // Internet Explorer > 9 from local files
		} else {
			return new XMLHttpRequest(); // Firefox, Chrome, Opera
		}
	} else if (typeof ActiveXObject !== "undefined") {
		return new ActiveXObject("Microsoft.XMLHTTP"); // Internet Explorer < 9
	} else {
		console.log("File loading failed. XMLHttpRequest and ActiveXObject deactivated or not supported.");
	}
}());

/*
 * NOTE
 * Below is a simple synchronous file loader.
 * The function has been named accordingly to doT.js
 */

function loadfile(file, async, method, send, response) {
var async = async || false, method = method || "GET", send = send || null, response = response || "text"; // default params
	if (typeof xhr !== "undefined") {
		xhr.open(method, file, async); // define request arguments
		xhr.setRequestHeader("Content-Type", "text/plain;charset=UTF-8"); // set request MIME type
		if (navigator.appName != "Microsoft Internet Explorer") { // request plain text for any browser except IE
			xhr.overrideMimeType("text/plain"); // prevent request header bugs
		}
		try {
			xhr.send(send); // send request to server
		} catch(err) {
			console.log(file + " not found.\n " + err); // log server error
		}
		if (response == "xml") {
			return xhr.responseXML; // return XML response from server
		} else {
			return xhr.responseText; // return Plain Text response from server
		}
	} else {
		console.log(file + " loading failed. XMLHttpRequest not supported."); // log client error
	}
}

/* ------------------------------------------------------------------ */
/* # Security */
/* ------------------------------------------------------------------ */
/*
 * NOTE
 * Les fonctions ci-dessous contrôlent l'authentification du client.
 * Elles doivent être invoquées avant le chargement du contenu protégé.
 *
 * WARNING
 * À appeler en HTTPS pour ne pas transporter le token en clair.
 */

function isAuthenticated() {
	if (typeof xhr !== "undefined") {
		var redirection = window.location.pathname;
		xhr.open("GET", "/rest/authc/connected", false); // define request arguments
		xhr.setRequestHeader("Content-Type", "application/json;charset=UTF-8"); // set request MIME type
		xhr.setRequestHeader("Authorization", window.localStorage.getItem($oursesAuthcToken)); // set authc token
		try {
			xhr.send(null); // send request to server
			if (xhr.status == 401){
				console.log("Unauthorized ! Redirect to the login page."); // unauthorized
				var loginParam = $redir_param + redirection;
				window.location.href = $login_page + loginParam;
			}
		} catch(err) {
			console.log("HTTP request failed.\n " + err); // log server error
		}
	} else {
		console.log("XMLHttpRequest not supported."); // log client error
	}
}

function isAdministratrice() {
	if (typeof xhr !== "undefined") {
		var redirection = window.location.pathname;
		xhr.open("GET", "/rest/authz/isadmin", false); // define request arguments
		xhr.setRequestHeader("Content-Type", "application/json;charset=UTF-8"); // set request MIME type
		xhr.setRequestHeader("Authorization", window.localStorage.getItem($oursesAuthcToken)); // set authc token
		try {
			xhr.send(null); // send request to server
			if (xhr.status == 401){
				console.log("Unauthorized ! Redirect to the login page."); // unauthorized
				var loginParam = $redir_param + redirection;
				window.location.href = $login_page + loginParam;
			}
			else if (xhr.status == 403){
				console.log("Forbidden ! Redirect to the login page."); // unauthorized
				window.location.href = $home_page;
			}
		} catch(err) {
			console.log("HTTP request failed.\n " + err); // log server error
		}
	} else {
		console.log("XMLHttpRequest not supported."); // log client error
	}
}

function isRedactrice() {
	if (typeof xhr !== "undefined") {
		var redirection = window.location.pathname;
		xhr.open("GET", "/rest/authz/isredac", false); // define request arguments
		xhr.setRequestHeader("Content-Type", "application/json;charset=UTF-8"); // set request MIME type
		xhr.setRequestHeader("Authorization", window.localStorage.getItem($oursesAuthcToken)); // set authc token
		try {
			xhr.send(null); // send request to server
			if (xhr.status == 401){
				console.log("Unauthorized ! Redirect to the login page."); // unauthorized
				var loginParam = $redir_param + redirection;
				window.location.href = $login_page + loginParam;
			}
			else if (xhr.status == 403){
				console.log("Forbidden ! Redirect to the login page."); // unauthorized
				window.location.href = $home_page;
			}
		} catch(err) {
			console.log("HTTP request failed.\n " + err); // log server error
		}
	} else {
		console.log("XMLHttpRequest not supported."); // log client error
	}
}
