DROP TABLE IF EXISTS bear_account
DROP TABLE IF EXISTS ourses_authentication_info
DROP TABLE IF EXISTS ourses_authorization_info
DROP TABLE IF EXISTS profile

create table bear_account (
  id                        bigint GENERATED BY DEFAULT AS IDENTITY (START WITH 1)  not null,
  authc_info_id             bigint not null,
  authz_info_id             bigint not null,
  profile_id                bigint not null,
  constraint pk_bear_account primary key (id))
;

create table ourses_authentication_info (
  id                        bigint GENERATED BY DEFAULT AS IDENTITY (START WITH 1)  not null,
  mail                      varchar(255),
  credentials               varchar(255),
  constraint pk_ourses_authentication_info primary key (id))
;

create table ourses_authorization_info (
  id                        bigint GENERATED BY DEFAULT AS IDENTITY (START WITH 1)  not null,
  roles_for_db              varchar(255),
  constraint pk_ourses_authorization_info primary key (id))
;

create table profile (
  id                        bigint GENERATED BY DEFAULT AS IDENTITY (START WITH 1)  not null,
  pseudo                    varchar(255),
  description               varchar(255),
  constraint pk_profile primary key (id))
;

alter table bear_account add constraint fk_bear_account_authcInfo_1 foreign key (authc_info_id) references ourses_authentication_info (id) on delete restrict on update restrict;
create index ix_bear_account_authcInfo_1 on bear_account (authc_info_id);
alter table bear_account add constraint fk_bear_account_authzInfo_2 foreign key (authz_info_id) references ourses_authorization_info (id) on delete restrict on update restrict;
create index ix_bear_account_authzInfo_2 on bear_account (authz_info_id);
alter table bear_account add constraint fk_bear_account_profile_3 foreign key (profile_id) references profile (id) on delete restrict on update restrict;
create index ix_bear_account_profile_3 on bear_account (profile_id);


